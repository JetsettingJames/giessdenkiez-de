# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
env:
  BUILD_TARGET: DEFAULT
  NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT }}
  NEXT_PUBLIC_USER_DATA_API_URL: ${{ secrets.NEXT_PUBLIC_USER_DATA_API_URL }}
  NEXT_PUBLIC_AUTH0_AUDIENCE: ${{ secrets.NEXT_PUBLIC_AUTH0_AUDIENCE }}
  NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  NEXT_PUBLIC_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
  NEXT_PUBLIC_MAPBOX_TREES_TILESET_LAYER: ${{ secrets.MAPBOX_TREES_TILESET_LAYER }}
  NEXT_PUBLIC_MAPBOX_TREES_TILESET_URL: ${{ secrets.NEXT_PUBLIC_MAPBOX_TREES_TILESET_URL }}
  NEXT_PUBLIC_MAP_BOUNDING_BOX: ${{ secrets.NEXT_PUBLIC_MAP_BOUNDING_BOX }}
  NEXT_PUBLIC_MAPBOX_API_KEY: ${{ secrets.NEXT_PUBLIC_MAPBOX_API_KEY }}
  NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
  NEXT_TELEMETRY_DISABLED: ${{ secrets.NEXT_TELEMETRY_DISABLED }}

on:
  push:
    branches: [master, staging]
  pull_request:
    branches: [master, staging]
    paths:
      - '.nvmrc'
      - 'src/**/*'
      - 'pages/**/*'
      - '.storybook/**/*'
      - 'public/**/*'
      - '.github/workflows/**/*'
      - 'package*.json'
      - 'jest.config.js'
      - 'tsconfig.json'
      - '.eslintrc.json'
      - 'next.config.js'
      - '*.js'
      - '*.cjs'
jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run lint
      - run: npm run type-check
      - run: npm run test:ci
  release:
    name: semantic-release
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 18
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
